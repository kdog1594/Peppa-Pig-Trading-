import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import sys
import statsmodels.api as sm
from statsmodels.tsa.stattools import coint
np.set_printoptions(threshold=sys.maxsize)

def loadPrices(fn):
    global nt, nInst
    df=pd.read_csv(fn, sep='\s+', header=None, index_col=None)
    nt, nInst = df.values.shape
    return (df.values)
nInst=100
currentPos = np.zeros(nInst)
pricesFile="./prices250.txt"
prcAll = loadPrices(pricesFile)
print ("Loaded %d instruments for %d days" % (nInst, nt)) 
def getShareSize():
    return size
#global prevPositions
#prevPositions = np.zeros(100, dtype = "i")

def Strategy(prices):
    #global prevPositions  
    #print(prevPositions)
    myPositions = np.zeros(100, dtype = "i") 
    pairs = [(2, 12), (2, 18), (2, 40), (2, 66), (2, 97), (12, 18), (18, 12), (29, 0), (29, 5), (30, 51), (44, 14), (44, 30), (44, 36), (44, 37), (44, 62), (44, 64), (44, 65), (44, 76), (45, 22), (45, 68), (45, 75), (45, 77), (46, 1), (46, 3), (46, 
4), (46, 5), (46, 6), (46, 8), (46, 9), (46, 11), (46, 12), (46, 13), (46, 14), (46, 16), (46, 17), (46, 18), (46, 20), (46, 21), (46, 22), (46, 23), (46, 25), (46, 28), (46, 29), (46, 30), (46, 31), (46, 32), (46, 34), (46, 35), (46, 36), (46, 37), (46, 38), (46, 39), (46, 40), (46, 45), (46, 48), (46, 49), (46, 50), (46, 51), (46, 52), (46, 53), (46, 54), (46, 55), (46, 56), (46, 57), (46, 59), (46, 60), (46, 61), (46, 62), (46, 63), (46, 64), (46, 65), (46, 68), (46, 69), (46, 70), (46, 72), (46, 75), (46, 77), (46, 78), (46, 79), (46, 81), (46, 82), (46, 84), (46, 86), (46, 87), (46, 89), (46, 90), (46, 92), (46, 93), (46, 94), (46, 96), (46, 97), (46, 99), (50, 14), (50, 42), (50, 60), (50, 62), (50, 70), (50, 72), (50, 76), (50, 78), (50, 90), (50, 99), (51, 62), (51, 70), (51, 76), (51, 78), (51, 90), (52, 42), (52, 44), (52, 50), (52, 60), (52, 64), (52, 65), (52, 78), (52, 86), (52, 90), (52, 93), (53, 36), (53, 51), (53, 62), (53, 65), (53, 70), (53, 74), (53, 79), (53, 81), (53, 83), (53, 90), (53, 93), (53, 96), (53, 99), (54, 1), (54, 2), (54, 3), (54, 4), (54, 11), (54, 21), (54, 23), (54, 24), (54, 27), (54, 35), (54, 38), (54, 40), (54, 46), (54, 55), (54, 56), (54, 57), (54, 58), (54, 59), (54, 67), (54, 79), (54, 83), (54, 84), (54, 88), (54, 89), (54, 94), (54, 97), (54, 98), (54, 99), (55, 1), (55, 3), (55, 4), (55, 6), (55, 9), (55, 11), (55, 21), (55, 23), (55, 30), (55, 35), (55, 36), (55, 38), (55, 46), (55, 54), (55, 56), (55, 57), (55, 58), (55, 59), (55, 69), (55, 73), (55, 74), (55, 79), (55, 81), (55, 84), (55, 88), (55, 91), (55, 92), (55, 94), (55, 96), (55, 98), (56, 1), (56, 2), (56, 3), (56, 4), (56, 11), (56, 21), (56, 27), (56, 29), (56, 33), (56, 35), (56, 40), (56, 46), (56, 53), (56, 54), (56, 55), (56, 57), (56, 61), (56, 69), (56, 73), (56, 85), (56, 88), (56, 92), (56, 94), (56, 95), (56, 97), (56, 98), (57, 3), (57, 4), (57, 6), (57, 9), (57, 11), (57, 16), (57, 21), (57, 23), (57, 30), (57, 35), (57, 36), (57, 38), (57, 46), (57, 53), (57, 55), (57, 56), (57, 58), (57, 59), (57, 67), (57, 69), (57, 72), (57, 74), (57, 79), (57, 83), (57, 84), (57, 85), 
(57, 88), (57, 90), (57, 91), (57, 92), (57, 94), (57, 96), (57, 98), (57, 99), (58, 3), (58, 4), (58, 9), (58, 11), (58, 16), (58, 20), (58, 21), (58, 23), (58, 30), (58, 35), (58, 36), (58, 38), (58, 46), (58, 53), (58, 54), (58, 55), 
(58, 57), (58, 59), (58, 62), (58, 63), (58, 65), (58, 67), (58, 69), (58, 72), (58, 74), (58, 79), (58, 81), (58, 82), (58, 83), (58, 84), (58, 85), (58, 88), (58, 90), (58, 91), (58, 92), (58, 94), (58, 95), (58, 96), (58, 98), (58, 99), (60, 14), (60, 42), (60, 44), (60, 50), (60, 52), (60, 64), (60, 76), (60, 81), (61, 1), (61, 2), (61, 3), (61, 4), (61, 5), (61, 6), (61, 9), (61, 10), (61, 11), (61, 12), (61, 18), (61, 21), (61, 23), (61, 24), (61, 26), (61, 27), (61, 28), (61, 29), (61, 33), (61, 35), (61, 36), (61, 38), (61, 40), (61, 45), (61, 46), (61, 54), (61, 55), (61, 56), (61, 59), (61, 66), (61, 68), (61, 69), (61, 73), (61, 74), (61, 79), (61, 80), (61, 83), (61, 84), (61, 87), (61, 88), (61, 89), (61, 95), (61, 97), (61, 98), (62, 36), (62, 42), (62, 50), (62, 51), (62, 53), (62, 65), (62, 70), (62, 76), (62, 86), (62, 90), (62, 93), (63, 31), (63, 42), (63, 51), (63, 52), (63, 62), (63, 65), (63, 70), (63, 72), (63, 
74), (63, 76), (63, 86), (63, 90), (63, 93), (64, 14), (64, 36), (64, 42), (64, 44), (64, 46), (64, 52), (64, 60), (64, 70), (64, 76), (64, 96), (65, 14), (65, 36), (65, 42), (65, 50), (65, 51), (65, 52), (65, 53), (65, 62), (65, 63), (65, 64), (65, 70), (65, 76), (65, 78), (65, 86), (65, 90), (66, 2), (66, 3), (66, 11), (66, 12), (66, 18), (66, 21), (66, 24), (66, 26), (66, 35), (66, 40), (66, 45), (66, 59), (66, 68), (66, 97), (67, 63), (67, 71), (67, 72), (67, 74), (67, 79), (67, 82), (67, 83), (67, 85), (67, 88), (67, 90), (67, 96), (67, 99), (68, 26), (68, 45), (68, 46), (68, 88), (69, 1), (69, 3), (69, 4), (69, 5), (69, 6), (69, 7), (69, 9), (69, 11), (69, 16), (69, 17), (69, 20), (69, 21), (69, 
23), (69, 27), (69, 30), (69, 31), (69, 35), (69, 36), (69, 37), (69, 38), (69, 44), (69, 46), (69, 51), (69, 52), (69, 53), (69, 54), (69, 55), (69, 56), (69, 57), (69, 58), (69, 62), (69, 63), (69, 65), (69, 67), (69, 70), (69, 71), (69, 74), (69, 79), (69, 81), (69, 82), (69, 83), (69, 84), (69, 85), (69, 86), (69, 88), (69, 90), (69, 91), (69, 92), (69, 94), (69, 96), (69, 98), (69, 99), (70, 9), (70, 14), (70, 31), (70, 36), (70, 37), (70, 42), (70, 50), (70, 51), 
(70, 52), (70, 53), (70, 60), (70, 62), (70, 63), (70, 64), (70, 65), (70, 72), (70, 76), (70, 81), (70, 86), (70, 90), (70, 93), (70, 96), (70, 99), (71, 3), (71, 4), (71, 9), (71, 11), (71, 14), (71, 16), (71, 20), (71, 21), (71, 23), 
(71, 30), (71, 31), (71, 36), (71, 37), (71, 38), (71, 42), (71, 44), (71, 46), (71, 50), (71, 51), (71, 52), (71, 53), (71, 62), (71, 63), (71, 64), (71, 65), (71, 70), (71, 79), (71, 86), (71, 90), (71, 93), (71, 99), (72, 3), (72, 4), (72, 9), (72, 11), (72, 14), (72, 16), (72, 20), (72, 21), (72, 23), (72, 30), (72, 31), (72, 36), (72, 37), (72, 42), (72, 44), (72, 46), (72, 50), (72, 51), (72, 52), (72, 53), (72, 57), (72, 60), (72, 62), (72, 63), (72, 64), (72, 65), (72, 67), (72, 70), (72, 71), (72, 74), (72, 76), (72, 78), (72, 79), (72, 81), (72, 82), (72, 83), (72, 86), (72, 90), (72, 91), (72, 93), (72, 96), (72, 99), (73, 33), (73, 35), (73, 40), (73, 54), (73, 55), (73, 56), (73, 57), (73, 61), (73, 66), (73, 79), (73, 80), (73, 84), (73, 89), (73, 92), (73, 94), (73, 95), (73, 97), (73, 98), (74, 55), (74, 79), (74, 90), (74, 96), (76, 14), (76, 42), (76, 44), (76, 50), (76, 51), (76, 60), (76, 62), (76, 63), (76, 64), (76, 65), (76, 70), (76, 72), (76, 81), (76, 86), (76, 90), (76, 93), (76, 96), (77, 75), (78, 30), (78, 42), (78, 44), (78, 50), (78, 51), (78, 52), (78, 60), (78, 62), (78, 64), (78, 65), (78, 70), (78, 76), (78, 82), (78, 86), (78, 90), (78, 93), (78, 99), (79, 9), (79, 30), (79, 36), (79, 44), (79, 53), (79, 55), (79, 57), (79, 67), (79, 71), (79, 72), (79, 74), (79, 83), (79, 85), (79, 88), (79, 91), (79, 93), (79, 94), (79, 99), (80, 2), (80, 26), (80, 40), (80, 45), (80, 46), (80, 59), (80, 66), (80, 68), (80, 97), (81, 9), (81, 16), (81, 36), (81, 42), (81, 44), (81, 50), (81, 53), (81, 55), (81, 60), (81, 62), (81, 63), (81, 65), (81, 70), (81, 76), (81, 82), (81, 90), (81, 93), (81, 94), (81, 
96), (81, 99), (82, 42), (82, 50), (82, 51), (82, 52), (82, 70), (82, 76), (82, 78), (82, 86), (82, 93), (83, 9), (83, 36), (83, 51), (83, 53), (83, 57), (83, 58), (83, 63), (83, 65), (83, 67), (83, 70), (83, 72), (83, 74), (83, 79), (83, 81), (83, 82), (83, 85), (83, 88), (83, 90), (83, 92), (83, 93), (83, 94), (83, 96), (83, 99), (84, 3), (84, 21), (84, 46), (84, 54), (84, 55), (84, 57), (84, 69), (84, 72), (84, 88), (84, 91), (84, 93), (84, 94), (84, 98), (85, 74), (85, 79), (85, 91), (85, 96), (85, 99), (86, 14), (86, 42), (86, 51), (86, 60), (86, 62), (86, 64), (86, 76), (86, 90), (87, 26), (87, 45), (87, 46), (87, 68), (87, 77), (88, 1), (88, 2), (88, 3), (88, 4), (88, 5), (88, 6), (88, 9), (88, 
11), (88, 14), (88, 16), (88, 17), (88, 20), (88, 21), (88, 23), (88, 24), (88, 28), (88, 29), (88, 30), (88, 31), (88, 35), (88, 36), (88, 37), (88, 38), (88, 40), (88, 42), (88, 44), (88, 46), (88, 51), (88, 53), (88, 54), (88, 55), (88, 56), (88, 57), (88, 58), (88, 59), (88, 61), (88, 62), (88, 63), (88, 65), (88, 67), (88, 68), (88, 69), (88, 70), (88, 71), (88, 72), (88, 74), (88, 79), (88, 81), (88, 82), (88, 83), (88, 84), (88, 85), (88, 86), (88, 90), (88, 91), (88, 92), (88, 93), (88, 94), (88, 95), (88, 96), (88, 97), (88, 98), (88, 99), (89, 2), (89, 11), (89, 21), (89, 24), (89, 40), (89, 45), (89, 46), (89, 54), (89, 59), (89, 61), (89, 66), (89, 68), (89, 73), (89, 80), (89, 95), (89, 97), (90, 36), (90, 50), (90, 51), (90, 52), (90, 53), (90, 62), (90, 65), (90, 70), (90, 74), (90, 76), (90, 86), (90, 93), (91, 4), (91, 9), (91, 16), (91, 21), (91, 30), (91, 36), (91, 46), (91, 53), (91, 55), (91, 57), (91, 62), (91, 63), (91, 67), (91, 70), (91, 72), (91, 74), (91, 76), (91, 79), (91, 81), (91, 83), (91, 84), (91, 85), (91, 88), (91, 90), (91, 94), (91, 96), (91, 98), (91, 99), (92, 1), (92, 2), (92, 3), (92, 4), (92, 6), (92, 9), (92, 11), (92, 16), (92, 20), (92, 21), (92, 23), (92, 24), (92, 27), (92, 28), (92, 29), (92, 30), (92, 33), (92, 35), (92, 36), (92, 38), (92, 40), (92, 44), (92, 46), (92, 53), (92, 55), (92, 56), (92, 57), (92, 59), (92, 62), (92, 63), (92, 67), (92, 69), (92, 73), (92, 74), (92, 79), (92, 83), (92, 85), (92, 88), (92, 89), (92, 90), (92, 91), (92, 95), (92, 96), (92, 97), (92, 98), (92, 99), (93, 9), (93, 14), (93, 16), (93, 20), (93, 30), (93, 31), (93, 36), (93, 37), (93, 42), (93, 44), (93, 46), (93, 50), (93, 51), (93, 52), (93, 53), (93, 62), (93, 63), (93, 64), (93, 65), (93, 72), (93, 74), (93, 76), (93, 78), (93, 79), (93, 81), (93, 83), (93, 84), (93, 90), (93, 96), (94, 4), (94, 6), (94, 9), (94, 11), (94, 16), (94, 21), (94, 23), (94, 30), (94, 36), (94, 37), (94, 44), (94, 46), (94, 50), (94, 51), (94, 53), (94, 54), (94, 55), (94, 56), (94, 57), (94, 58), (94, 62), (94, 63), (94, 64), (94, 65), (94, 67), (94, 69), (94, 70), (94, 71), (94, 72), (94, 74), (94, 76), (94, 79), (94, 81), (94, 82), (94, 83), (94, 84), (94, 85), (94, 86), (94, 88), (94, 90), (94, 91), (94, 92), (94, 96), (94, 98), (94, 99), (95, 1), (95, 2), (95, 3), (95, 4), (95, 11), (95, 18), (95, 21), (95, 24), (95, 27), (95, 33), (95, 35), (95, 40), (95, 45), (95, 54), (95, 56), (95, 57), (95, 58), (95, 59), (95, 61), (95, 66), (95, 69), (95, 73), (95, 79), (95, 84), (95, 88), (95, 89), (95, 91), (95, 92), (95, 94), (95, 97), (95, 98), (96, 1), (96, 3), (96, 4), (96, 6), (96, 9), (96, 11), (96, 14), (96, 16), (96, 20), (96, 21), (96, 23), (96, 27), (96, 28), (96, 29), (96, 30), (96, 31), (96, 33), (96, 35), (96, 36), (96, 37), (96, 38), (96, 42), (96, 44), (96, 46), (96, 51), (96, 52), (96, 53), (96, 55), (96, 59), (96, 62), (96, 63), (96, 64), (96, 65), (96, 70), (96, 71), (96, 72), (96, 74), (96, 76), (96, 78), (96, 81), (96, 82), (96, 83), (96, 88), (96, 90), (96, 91), (96, 93), (96, 98), (98, 3), (98, 4), (98, 11), (98, 21), (98, 46), (98, 54), (98, 55), (98, 56), (98, 57), (98, 58), (98, 69), (98, 84), (98, 88), (98, 91), (98, 92), (98, 93), (98, 94), (98, 95), (98, 96), (99, 30), (99, 50), (99, 51), (99, 53), (99, 57), (99, 58), (99, 62), (99, 63), (99, 67), (99, 69), (99, 70), (99, 71), (99, 72), (99, 74), (99, 78), (99, 79), (99, 81), (99, 82), (99, 83), (99, 85), (99, 90), (99, 91), (99, 94)]
    #[(79, 74), (58, 90), (60,50), (61,36), (62,93), (68,59), (63,42), (69, 3), (70,81), (72, 60), (80, 66), (87, 77), (88, 57), (91, 79), (93, 90), (94, 51)] 
    
    for pair in pairs:
        #stock 74 8.96
        #stock 79 = 6,83
        if (prcAll[0:201, pair[0]] - prcAll[0:201, pair[1]]).mean() > 0:
            #pair[0] is > pair[1]
            stock_expensive = pair[0]
            stock_cheaper = pair[1]
        else:
            #pair[0] is < pair[1]
            stock_expensive = pair[1]
            stock_cheaper = pair[0]

        data_spread = prcAll[0:201, stock_expensive] - prcAll[0:201, stock_cheaper]
        mean_spread = data_spread.mean()
        
        one_std = data_spread.std()
        

        curPrices = prices[-1, :]
        last_price_spread = curPrices[stock_expensive] - curPrices[stock_cheaper]

        #standardize the price spread by subtracting the mean
        last_price_spread_standardized  = last_price_spread - mean_spread
        #Computing max sharesize
        #later it will be getShareSize()
        sharesize_cheaper = 6250 // curPrices[stock_cheaper]
        sharesize_expensive = 6250 // curPrices[stock_expensive]


        if last_price_spread_standardized >= one_std: #short the spread
            #long stock_cheaper
            myPositions[stock_cheaper] = sharesize_cheaper 
            #short stock_expensive
            myPositions[stock_expensive] = -sharesize_expensive

        elif last_price_spread_standardized <= -one_std: #long the spread 
           
            #short stock_cheaper
            myPositions[stock_cheaper] = -sharesize_cheaper            
            #long stock_expensive 
            myPositions[stock_expensive] = sharesize_expensive
        
        elif last_price_spread_standardized <= (one_std/5) and last_price_spread_standardized >=0: #smaller than 1/3 std > 0 
            #if prevPositions[stock_cheaper] != 0 and prevPositions[stock_expensive] != 0: # we have a position
            myPositions[stock_cheaper] = 0
            myPositions[stock_expensive] = 0

        
        elif last_price_spread_standardized >= (-one_std/5) and last_price_spread_standardized <=0: #smaller than 1/3 std > 0 
            #if prevPositions[stock_cheaper] != 0 and prevPositions[stock_expensive] !=0: # we have a position
            myPositions[stock_cheaper] = 0 
            myPositions[stock_expensive] = 0

        else:
            pass
            #do nothing
    #print(myPositions)
    #prevPositions += myPositions
    return myPositions

    # data = spread -> 79-74 this is the actual spread
    # spread = data - mean.spread() the actual function is data.mean
    # this makes it so that, we look at purely 1STD / 2 STD away from 0 as opposed to 1STD/2STD away from mean
    # one_std = data.std()
    # if spread > one_std:

    #   "short the spread"
    #   check which stock is more expensive than the other
    #   short the more expensive one, and long the cheap one


    # if spread < -one_std:
    # "long the spread"
    # check which stock is more expensive than the other
    # short the cheaper one, long the expensive one. 
def getMyPosition (prcSoFar):
    global currentPos
    (nins,nt) = prcSoFar.shape
    rpos = Strategy(prcSoFar.T)
    currentPos += rpos
    # The algorithm must return a vector of integers, indicating the position of each stock.
    # Position = number of shares, and can be positve or negative depending on long/short position.
    return currentPos 
    #[1 , 5 ,0 , 0 ,-5, 0 ,,,,,,............. 100 stocks and the positions we have in them!]
    #[0, 2, 0, 0, +3, 0]
    #[1 , 7 ,0 , 0 ,-2, 0 ,,,,,,............. 100 stocks and the positions we have in them!]








#all stocks from day 151 to day 250
#x = prcAll[0, :]
#z = prcAll[:, 0] #[stock1, stock2, stock3, stock4] Day 1
#so 149 gives the 150th day, so 250 doesnt include 250, so this goes from day 150 to day 251 but doesnt include 251
#it goes up to 250
#y = prcAll[:, 150:250]


# so we have to return our positions based on at the end of the last most pricing day. so eval.py
# gets all the positions at the end of day1, at the end of day2, end of day3 etc... and it will keep calling getmyposition in a loop 
#prcHistSoFar = prcAll[0:202, :]
#newPosOrig = getMyPosition(prcHistSoFar)
#print(newPosOrig)s

#Consider the case where your last position was +30, and the new stock price is $20. 
#If your new position is +100, eval will register this as buying 70 extra shares at $20 a share. If your new position is -200, eval will sell 230 shares also at $20 a share.
#getmyposition returns positions at the end of day (e.g. day before we had [0, 0, 0, 30]) 
#so if we call it again and we wanted to buy 70 more shares, getmyPosition returns [0, 0, 0, 100]